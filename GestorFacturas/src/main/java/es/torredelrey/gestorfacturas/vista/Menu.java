/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package es.torredelrey.gestorfacturas.vista;

import es.torredelrey.gestorfacturas.controlador.ClienteJpaController;
import es.torredelrey.gestorfacturas.controlador.FacturaJpaController;
import es.torredelrey.gestorfacturas.modelo.Cliente;
import es.torredelrey.gestorfacturas.modelo.Factura;
import java.awt.Color;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import net.sf.jasperreports.engine.JRDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.view.JasperViewer;

//proyecto modificado de nuevo
/**
 *
 * @author Usuario
 */
public class Menu extends javax.swing.JFrame {

    private final EntityManagerFactory emf;
    private final FacturaJpaController fjc;
    private final ClienteJpaController cjc;
    
    private Factura facturaBorrada = null;
    
    public Menu() {
        initComponents();

        setTitle("Gestor de Facturas");
        
        //BD
        emf = Persistence.createEntityManagerFactory("persistence");
        fjc = new FacturaJpaController(emf);
        cjc = new ClienteJpaController(emf);
        
        //Interfaz
        actualizaUi();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblId = new javax.swing.JLabel();
        txfId = new javax.swing.JTextField();
        lblAsunto = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();
        lblCantidad = new javax.swing.JLabel();
        lblEu = new javax.swing.JLabel();
        cmbTipo = new javax.swing.JComboBox<>();
        lblTipo = new javax.swing.JLabel();
        lblBarra2 = new javax.swing.JLabel();
        lblBarra1 = new javax.swing.JLabel();
        cmbCliente = new javax.swing.JComboBox<>();
        lblTipo1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFacturas = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        lblSinFacturas = new javax.swing.JLabel();
        txfAsunto = new javax.swing.JTextField();
        txfCantidad = new javax.swing.JTextField();
        spnFechaDia = new javax.swing.JSpinner();
        spnFechaMes = new javax.swing.JSpinner();
        spnFechaAno = new javax.swing.JSpinner();
        btnReset = new javax.swing.JButton();
        btnListarFactura = new javax.swing.JButton();
        mbaMenu = new javax.swing.JMenuBar();
        menAcciones = new javax.swing.JMenu();
        mitAnadir = new javax.swing.JMenuItem();
        mitEditar = new javax.swing.JMenuItem();
        mitEliminar = new javax.swing.JMenuItem();
        menEdicion = new javax.swing.JMenu();
        mitDeshacer = new javax.swing.JMenuItem();
        menAyuda = new javax.swing.JMenu();
        mitAyuda = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("es/torredelrey/gestorfacturas/vista/Bundle"); // NOI18N
        lblId.setText(bundle.getString("Menu.lblId.text")); // NOI18N

        txfId.setEditable(false);
        txfId.setToolTipText(bundle.getString("Menu.txfId.toolTipText")); // NOI18N

        lblAsunto.setText(bundle.getString("Menu.lblAsunto.text")); // NOI18N

        lblFecha.setText(bundle.getString("Menu.lblFecha.text")); // NOI18N

        lblCantidad.setText(bundle.getString("Menu.lblCantidad.text")); // NOI18N

        lblEu.setText(bundle.getString("Menu.lblEu.text")); // NOI18N

        cmbTipo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbTipoItemStateChanged(evt);
            }
        });

        lblTipo.setText(bundle.getString("Menu.lblTipo.text")); // NOI18N

        lblBarra2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        lblBarra2.setText(bundle.getString("Menu.lblBarra2.text")); // NOI18N

        lblBarra1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        lblBarra1.setText(bundle.getString("Menu.lblBarra1.text")); // NOI18N

        lblTipo1.setText(bundle.getString("Menu.lblTipo1.text")); // NOI18N

        tblFacturas.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblFacturas.setName("Facturas"); // NOI18N
        tblFacturas.setUpdateSelectionOnSort(false);
        tblFacturas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblFacturasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblFacturas);

        lblSinFacturas.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblSinFacturas.setForeground(new java.awt.Color(204, 0, 0));

        txfAsunto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txfAsuntoKeyTyped(evt);
            }
        });

        txfCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txfCantidadKeyReleased(evt);
            }
        });

        spnFechaDia.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnFechaDiaStateChanged(evt);
            }
        });

        spnFechaMes.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnFechaMesStateChanged(evt);
            }
        });

        spnFechaAno.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnFechaAnoStateChanged(evt);
            }
        });

        btnReset.setForeground(new java.awt.Color(102, 102, 102));
        btnReset.setText(bundle.getString("Menu.btnReset.text")); // NOI18N
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnListarFactura.setText(bundle.getString("Menu.btnListarFactura.text")); // NOI18N
        btnListarFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarFacturaActionPerformed(evt);
            }
        });

        menAcciones.setText(bundle.getString("Menu.menAcciones.text")); // NOI18N

        mitAnadir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mitAnadir.setText(bundle.getString("Menu.mitAnadir.text")); // NOI18N
        mitAnadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitAnadirActionPerformed(evt);
            }
        });
        menAcciones.add(mitAnadir);

        mitEditar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mitEditar.setText(bundle.getString("Menu.mitEditar.text")); // NOI18N
        mitEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitEditarActionPerformed(evt);
            }
        });
        menAcciones.add(mitEditar);

        mitEliminar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mitEliminar.setText(bundle.getString("Menu.mitEliminar.text")); // NOI18N
        mitEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitEliminarActionPerformed(evt);
            }
        });
        menAcciones.add(mitEliminar);

        mbaMenu.add(menAcciones);

        menEdicion.setText(bundle.getString("Menu.menEdicion.text")); // NOI18N

        mitDeshacer.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mitDeshacer.setText(bundle.getString("Menu.mitDeshacer.text")); // NOI18N
        mitDeshacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitDeshacerActionPerformed(evt);
            }
        });
        menEdicion.add(mitDeshacer);

        mbaMenu.add(menEdicion);

        menAyuda.setText(bundle.getString("Menu.menAyuda.text")); // NOI18N

        mitAyuda.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mitAyuda.setText(bundle.getString("Menu.mitAyuda.text")); // NOI18N
        mitAyuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitAyudaActionPerformed(evt);
            }
        });
        menAyuda.add(mitAyuda);

        mbaMenu.add(menAyuda);

        setJMenuBar(mbaMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblFecha)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(spnFechaDia, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblBarra1, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(spnFechaMes, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblBarra2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(spnFechaAno, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lblTipo)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(50, 50, 50)
                                            .addComponent(lblTipo1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(cmbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lblId)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txfId, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(63, 63, 63)
                                            .addComponent(lblAsunto)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txfAsunto, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lblCantidad)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txfCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lblEu)))))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnReset)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnListarFactura))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(281, 281, 281)
                                .addComponent(lblSinFacturas)))
                        .addGap(0, 121, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblId)
                    .addComponent(txfId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAsunto)
                    .addComponent(lblCantidad)
                    .addComponent(lblEu)
                    .addComponent(txfAsunto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txfCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFecha)
                    .addComponent(lblBarra2)
                    .addComponent(lblBarra1)
                    .addComponent(spnFechaDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spnFechaMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spnFechaAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTipo)
                    .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTipo1)
                    .addComponent(cmbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReset)
                    .addComponent(btnListarFactura))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSinFacturas)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txfAsuntoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfAsuntoKeyTyped
        if(txfAsunto.getText().length()>=10){
            txfAsunto.setText(txfAsunto.getText().substring(0,9));
        }
    }//GEN-LAST:event_txfAsuntoKeyTyped

    private void txfCantidadKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfCantidadKeyReleased
        String texto = txfCantidad.getText();
        int punto=0;
        int decimales=0;
        
        if(texto.isEmpty()) txfCantidad.setText("0");
        
        for(char c : texto.toCharArray()){
            switch(c){
                case '0','1','2','3','4','5','6','7','8','9' -> {
                    if(punto==1) decimales++;
                }
                case '.' -> {
                    punto++;
                }
                default -> {
                    txfCantidad.setForeground(Color.red);
                    return;
                }
            }
            
            if(punto>1 || decimales>2){
                txfCantidad.setForeground(Color.red);
                return;
            }
        }
        
        txfCantidad.setForeground(Color.BLACK);
    }//GEN-LAST:event_txfCantidadKeyReleased

    private void spnFechaDiaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnFechaDiaStateChanged
        int max;
        switch((int)spnFechaMes.getValue()){
            case 2 -> {
                max=28;
            }
            case 1,3,5,7,8,10,12 -> {
                max=31;
            }
            case 4,6,9,11 -> {
                max=30;
            }
            default -> max=1;
        }
        
        if((int)spnFechaDia.getValue()>max){
            spnFechaDia.setValue(1);
            return;
        }
        
        if((int)spnFechaDia.getValue()<1){
            spnFechaDia.setValue(max);
        }
    }//GEN-LAST:event_spnFechaDiaStateChanged

    private void spnFechaMesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnFechaMesStateChanged
        if((int)spnFechaMes.getValue()<1){
            spnFechaMes.setValue(12);
        }
        if((int)spnFechaMes.getValue()>12){
            spnFechaMes.setValue(1);
        }
        
        int max;
        switch((int)spnFechaMes.getValue()){
            case 2 -> {
                max=28;
            }
            case 1,3,5,7,8,10,12 -> {
                max=31;
            }
            case 4,6,9,11 -> {
                max=30;
            }
            default -> max=1;
        }
        
        if((int)spnFechaDia.getValue()>max){
            spnFechaDia.setValue(max);
        }
    }//GEN-LAST:event_spnFechaMesStateChanged

    private void spnFechaAnoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnFechaAnoStateChanged
        final int min = 2000;
        
        if((int)spnFechaAno.getValue()>LocalDate.now().getYear()){
            spnFechaAno.setValue(min);
            return;
        }
        
        if((int)spnFechaAno.getValue()<min){
            spnFechaAno.setValue(LocalDate.now().getYear());
        }
        
    }//GEN-LAST:event_spnFechaAnoStateChanged

    private void tblFacturasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblFacturasMouseClicked
        if(tblFacturas.getSelectedRow()<0){
            return;
        }
        
        ArrayList<Factura> facturasTodas = new ArrayList<>((ArrayList)fjc.findFacturaEntities());
        ArrayList<Factura> facturas = new ArrayList<>();
        
        for(Factura f : facturasTodas) if(f.getBaja()==0) facturas.add(f);
        
        Factura factura = facturas.get(tblFacturas.getSelectedRow());
        
        txfId.setText(String.valueOf(factura.getId()));
        txfAsunto.setText(factura.getAsunto());
        txfCantidad.setText(String.valueOf(factura.getCantidad()));
        txfCantidad.setForeground(Color.BLACK);
        
        SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy");
        String fechaString = formato.format(factura.getFecha());
        String[] fecha = fechaString.split("-");
        String dia = fecha[0];
        String mes = fecha[1];
        String ano = fecha[2];
        
        spnFechaDia.setValue(Integer.valueOf(dia));
        spnFechaMes.setValue(Integer.valueOf(mes));
        spnFechaAno.setValue(Integer.valueOf(ano));

        ArrayList<Cliente> clientes = new ArrayList<>(getClientesFromTipo(factura.getTipo()));
        
        for(int x = 0 ; x < cmbTipo.getItemCount(); x++){
            if(cmbTipo.getItemAt(x).equals(factura.getTipo())){
                cmbTipo.setSelectedIndex(x);
                break;
            }

        }

        int i=0;
        for(Cliente c : clientes){
            if(c.getId()==factura.getCliente().getId()){
                cmbCliente.setSelectedIndex(i);
                break;
            }
            i++;
        }
    }//GEN-LAST:event_tblFacturasMouseClicked

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        actualizaUi();
    }//GEN-LAST:event_btnResetActionPerformed

    private void mitAnadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitAnadirActionPerformed
        if(!isAsuntoValid(txfAsunto.getText()) || txfCantidad.getForeground()==Color.RED){
            return;
        }
        
        Factura nueva = new Factura();
        nueva.setId(0);
        nueva.setAsunto(txfAsunto.getText());
        nueva.setCantidad(Double.valueOf(txfCantidad.getText()));
        
        String fechaString = String.format("%04d-%02d-%02d", spnFechaAno.getValue(),spnFechaMes.getValue(),spnFechaDia.getValue());
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        Date fecha;
        try {
            fecha = sdf.parse(fechaString);
        } catch (ParseException ex) {
            fecha = null;
        }
        nueva.setFecha(fecha);
        
        nueva.setTipo(cmbTipo.getSelectedItem().toString());
        nueva.setCliente((Cliente)cjc.findCliente(Integer.valueOf(cmbCliente.getSelectedItem().toString().substring(0,1))));
        nueva.setBaja(0);
        
        SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy");
        
        String mensaje = "¿Estás seguro?\nAsunto: "+nueva.getAsunto()+"\nCantidad: " + nueva.getCantidad().toString() +"\nFecha: "+formato.format(nueva.getFecha())+"\nTipo: "+nueva.getTipo()+"\nCliente: "+nueva.getCliente().getId().toString()+"-"+nueva.getCliente().getNombre();
        if(JOptionPane.showConfirmDialog(this, mensaje, "Crear factura", JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION){
            fjc.create(nueva);
            JOptionPane.showConfirmDialog(this, "Factura creada con éxito",":)",JOptionPane.PLAIN_MESSAGE);
        }
        
        actualizaUi();
    }//GEN-LAST:event_mitAnadirActionPerformed

    private void mitEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitEditarActionPerformed
        if(txfId.getText().isEmpty()){
            JOptionPane.showConfirmDialog(this, "Selecciona una factura de la tabla",">:(",JOptionPane.PLAIN_MESSAGE);
            return;
        }
        
        if(txfAsunto.getText().isBlank() || txfAsunto.getText().isEmpty()){
            JOptionPane.showConfirmDialog(this ,"Introduce un asunto",":(",JOptionPane.PLAIN_MESSAGE);
            return;
        }
        for(Factura f : fjc.findFacturaEntities()){
            if(txfAsunto.getText().equals(f.getAsunto())){
                if(txfId.getText().equals(f.getId().toString())) break;
                JOptionPane.showConfirmDialog(this,"Ese asunto ya existe",":(",JOptionPane.PLAIN_MESSAGE);
                return;
            }
        }
        
        if(txfCantidad.getForeground()==Color.RED){
            JOptionPane.showConfirmDialog(this, "Cantidad no válida",">:(",JOptionPane.PLAIN_MESSAGE);
            return;
        }
        
        Factura factura = fjc.findFactura(Integer.valueOf(txfId.getText()));
        
        factura.setAsunto(txfAsunto.getText());
        factura.setCantidad(Double.valueOf(txfCantidad.getText()));
        factura.setTipo((String)cmbTipo.getSelectedItem());
        factura.setCliente(cjc.findCliente(Integer.valueOf(cmbCliente.getSelectedItem().toString().substring(0,1))));
        String fechaString = String.format("%04d-%02d-%02d", spnFechaAno.getValue(),spnFechaMes.getValue(),spnFechaDia.getValue());
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        Date fecha;
        try {
            fecha = sdf.parse(fechaString);
        } catch (ParseException ex) {
            fecha = null;
        }
        
        factura.setFecha(fecha);
        SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy");
        
        String mensaje = "¿Estás seguro?\nID: " + factura.getId().toString() +"\nAsunto: "+factura.getAsunto()+"\nCantidad: " + factura.getCantidad().toString() +"\nFecha: "+formato.format(factura.getFecha())+"\nTipo: "+factura.getTipo()+"\nCliente: "+factura.getCliente().getId().toString()+"-"+factura.getCliente().getNombre();
        if(JOptionPane.showConfirmDialog(this, mensaje, "Editar factura", JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION){
            try {
                fjc.edit(factura);
            } catch (Exception ex) {
                JOptionPane.showConfirmDialog(this ,"Error: No se ha editado la factura",":(",JOptionPane.PLAIN_MESSAGE);
                return;
            }
            JOptionPane.showConfirmDialog(this ,"Factura editada exitosamente",":)",JOptionPane.PLAIN_MESSAGE);
        }
        
        actualizaUi();
    }//GEN-LAST:event_mitEditarActionPerformed

    private void mitEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitEliminarActionPerformed
            if(txfId.getText().isEmpty()){
            JOptionPane.showConfirmDialog(this, "Selecciona una factura de la tabla",">:(",JOptionPane.PLAIN_MESSAGE);
            return;
        }
        
        Factura factura = fjc.findFactura(Integer.valueOf(txfId.getText()));
        
        factura.setBaja(1);
        
        SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy");
        
        String mensaje = "¿Estás seguro?\nID: " + factura.getId().toString() +"\nAsunto: "+factura.getAsunto()+"\nCantidad: " + factura.getCantidad().toString() +"\nFecha: "+formato.format(factura.getFecha())+"\nTipo: "+factura.getTipo()+"\nCliente: "+factura.getCliente().getId().toString()+"-"+factura.getCliente().getNombre();
        if(JOptionPane.showConfirmDialog(this, mensaje, "Borrar factura", JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION){
            try {
                fjc.edit(factura);
            } catch (Exception ex) {
                JOptionPane.showConfirmDialog(this ,"Error: No se ha eliminado la factura",":(",JOptionPane.PLAIN_MESSAGE);
                return;
            }
            JOptionPane.showConfirmDialog(this ,"Factura eliminada exitosamente",":)",JOptionPane.PLAIN_MESSAGE);
            facturaBorrada=factura;
        }
        
        actualizaUi();
    }//GEN-LAST:event_mitEliminarActionPerformed

    private void mitDeshacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitDeshacerActionPerformed
        if(facturaBorrada==null){
            JOptionPane.showConfirmDialog(this, "No hay ninguna factura borrada recientemente",":(",JOptionPane.PLAIN_MESSAGE);
            return;
        }
        
        facturaBorrada.setBaja(0);
        try {
            fjc.edit(facturaBorrada);
            JOptionPane.showConfirmDialog(this ,"Factura ID:"+facturaBorrada.getId().toString()+" recuperada exitosamente",":)",JOptionPane.PLAIN_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showConfirmDialog(this ,"Error al recuperar la factura",":(",JOptionPane.PLAIN_MESSAGE);
        }
        
        facturaBorrada = null;
        actualizaUi();
    }//GEN-LAST:event_mitDeshacerActionPerformed

    private void mitAyudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitAyudaActionPerformed
        InfoAlumno ia = new InfoAlumno();
        ia.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        ia.show(true);
    }//GEN-LAST:event_mitAyudaActionPerformed

    private void cmbTipoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbTipoItemStateChanged
        if(cmbTipo.getSelectedIndex()<0) return;
        cmbCliente.removeAllItems();
        for(Cliente c : getClientesFromTipo(cmbTipo.getSelectedItem().toString())){
            cmbCliente.addItem(c.getId().toString()+": "+c.getNombre());
        }
    }//GEN-LAST:event_cmbTipoItemStateChanged

    private void btnListarFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarFacturaActionPerformed
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("persistence");
        FacturaJpaController controller = new FacturaJpaController(emf);
        leerInformeBD(controller.findFacturaEntities());
    }//GEN-LAST:event_btnListarFacturaActionPerformed

    public static void leerInformeBD(List<Factura>lista){
        try {
            JasperPrint print;
            HashMap param = new HashMap();
            JRDataSource datasource = new JRBeanArrayDataSource(lista.toArray());

            String report = "src/main/java/es/torredelrey/gestorfacturas/vista/listadoFacturas.jasper";
            print = JasperFillManager.fillReport(report, param,datasource);
            JasperExportManager.exportReportToPdfFile(print,"informeFactura.pdf");
            JasperViewer.viewReport(print);
        } catch (JRException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
         
    }
    
    private void actualizaUi(){
        //PREPARACION DE DATOS DE ENTRADA
        txfId.setText(""); //Solo visual, lo asigna la bd
        txfAsunto.setText("");
        txfCantidad.setText("0.00");
        txfCantidad.setForeground(Color.BLACK);
        spnFechaDia.setValue(1);
        spnFechaMes.setValue(1);
        spnFechaAno.setValue(2000);
        
        //CLIENTES Y TIPOS
        ArrayList<Cliente> clientes = new ArrayList<>(cjc.findClienteEntities());
        ArrayList<String> tipos = new ArrayList<>(getTipos(clientes));
        
        cmbTipo.removeAllItems();
        cmbCliente.removeAllItems();
        
        //Asignacion de datos
        for(String t : tipos){
            cmbTipo.addItem(t);
        }
        clientes = getClientesFromTipo(cmbTipo.getSelectedItem().toString());
        cmbCliente.removeAllItems();
        for(Cliente c : clientes){
            cmbCliente.addItem(c.getId()+": "+c.getNombre());
        }
                
        ///////////////////////////////////////////////////////////////////////////
        //FACTURAS
        ArrayList<Factura> facturasTodas = new ArrayList<>(fjc.findFacturaEntities());
        ArrayList<Factura> facturas = new ArrayList<>();
        
        for(Factura f : facturasTodas) if(f.getBaja()==0) facturas.add(f);
        
        lblSinFacturas.setText("");
        if(facturas.isEmpty()){
            lblSinFacturas.setText("NO HAY FACTURAS GUARDADAS");
        }

        //Creacion de tablemodel
        AbstractTableModel modeloDeTabla = new AbstractTableModel() {
            private String[] columnas = {"ID", "Asunto", "Fecha", "Cantidad", "Tipo", "Cliente"};

            @Override
            public int getRowCount() {
                return facturas.size();
            }

            @Override
            public int getColumnCount() {
                return columnas.length;
            }

            @Override
            public String getColumnName(int columnIndex) {
                return columnas[columnIndex];
            }

            @Override
            public Object getValueAt(int rowIndex, int columnIndex) {
                Factura factura = facturas.get(rowIndex);

                switch (columnIndex) {
                    case 0:
                        return factura.getId();
                    case 1:
                        return factura.getAsunto();
                    case 2:
                        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                        return sdf.format(factura.getFecha());
                    case 3:
                        return factura.getCantidad();
                    case 4:
                        return factura.getTipo();
                    case 5:
                        return factura.getCliente().getId()+" - "+factura.getCliente().getNombre();
                    default:
                        return null;
                }
            }
        };
        
        //Asignacion de datos
        tblFacturas.setModel(modeloDeTabla);
    }   
    
    private ArrayList<String> getTipos(ArrayList<Cliente> clientes){
        ArrayList<String> tipos = new ArrayList<>();
        
        for(Cliente c : clientes){
            boolean existe=false;
            for(String tipo :tipos){
                if(c.getTipo().equals(tipo)){
                    existe = true;
                    break;
                }
            }
            if(!existe){
                tipos.add(c.getTipo());
            }
        }
        
        return tipos;
    }
        
    private ArrayList<Cliente> getClientesFromTipo(String tipo){
        ArrayList<Cliente> clientes = new ArrayList<>(cjc.findClienteEntities());
        for(int i=clientes.size()-1;i>=0;i--){
            if(!clientes.get(i).getTipo().equals(tipo)) clientes.remove(clientes.get(i));
        }
        
        return clientes;
    }
    
    private boolean isAsuntoValid(String asunto){
        if(asunto.isBlank() || asunto.isEmpty()){
            JOptionPane.showConfirmDialog(this ,"Introduce un asunto",":(",JOptionPane.PLAIN_MESSAGE);
            return false;
        }
        
        for(Factura f : fjc.findFacturaEntities()){
            if(asunto.equals(f.getAsunto())){
                JOptionPane.showConfirmDialog(this,"Ese asunto ya existe",":(",JOptionPane.PLAIN_MESSAGE);
                return false;
            }
        }
        
        return true;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnListarFactura;
    private javax.swing.JButton btnReset;
    private javax.swing.JComboBox<String> cmbCliente;
    private javax.swing.JComboBox<String> cmbTipo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblAsunto;
    private javax.swing.JLabel lblBarra1;
    private javax.swing.JLabel lblBarra2;
    private javax.swing.JLabel lblCantidad;
    private javax.swing.JLabel lblEu;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblSinFacturas;
    private javax.swing.JLabel lblTipo;
    private javax.swing.JLabel lblTipo1;
    private javax.swing.JMenuBar mbaMenu;
    private javax.swing.JMenu menAcciones;
    private javax.swing.JMenu menAyuda;
    private javax.swing.JMenu menEdicion;
    private javax.swing.JMenuItem mitAnadir;
    private javax.swing.JMenuItem mitAyuda;
    private javax.swing.JMenuItem mitDeshacer;
    private javax.swing.JMenuItem mitEditar;
    private javax.swing.JMenuItem mitEliminar;
    private javax.swing.JSpinner spnFechaAno;
    private javax.swing.JSpinner spnFechaDia;
    private javax.swing.JSpinner spnFechaMes;
    private javax.swing.JTable tblFacturas;
    private javax.swing.JTextField txfAsunto;
    private javax.swing.JTextField txfCantidad;
    private javax.swing.JTextField txfId;
    // End of variables declaration//GEN-END:variables
}
